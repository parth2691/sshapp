node.js
=======

2011.06.03
----------

   1. 全新安装 cygwin 1.7 + nodejs 0.48

   https://github.com/joyent/node/wiki/Building-node.js-on-Cygwin-%28Windows%29

   Using setup.exe from Cygwin (1), install the following packages required to compile node.js:

    devel → gcc4-g++ [Builds v0.4.2 and earlier use gcc-g++]
    devel → git
    devel → make
    devel → openssl
    libs → openssl-devel
    devel → pkg-config
    devel → zlib-devel
    python → python

   download nodejs.tar
   $ ./configure
   $ make
   $ make install

   2. npmjs

   curl http://npmjs.org/install.sh | sh

   安装express
#npm install express
express默认使用jade view engine，所以在安装jade
#npm install jade

2011.06.02
----------

   1. 一个支持Windows并且配套齐全的NodeJs发行版

   http://node-js.prcn.co.cc/

   下载最新版后直接解压到cygwin安装的根目录，就可以使用了，当然这跟在linux下使用npm还是有一定区别的，在Linux上是直接使用npm命令方可，比如我要安装express框架，可以这样：
   在Linux上：
   npm install -g express
   而在Windows上则是：
   cd /bin
   node npm install -g express
   只需要在前面加上node命令方可，这样安装完成后会自动在/home/userdir/.npm目录下生成您刚刚安装的nodejs开发库，其中userdir是你用户的主目录。

   2. eclipse plugin

   nodejs - http://chromedevtools.googlecode.com/svn/update/dev/

   select: Chromium JavaScript Remote Debugger

   参考: https://github.com/joyent/node/wiki/Using-Eclipse-as-Node-Applications-Debugger

   cmd: node --debug-brk dbgtest.js
   eclipse-debug port 5858

   2. eclipse plugin
   http://cnodejs.org/blog/?p=911
   plugin download:
   http://chromedevtools.googlecode.com/svn/update/dev/
   
   选择“Chromium JavaScript Remote Debugger”
   
   要启用node的调试端口，在执行node脚本的时候需要添加 --debug 参数：
   node --debug[=port] NodeApp.js
   or
   node --debug-brk[=port] NodeApp.js
   其中port为开启的调试端口，默认为5858.
   debug和 debug-brk的区别在于，
   debug执行脚本的时候会直接运行该脚本，而–debug-brk执行脚本的时候，并不会马上执行，而是等待调试器的连接，然后按调试器的指令来执行。
   
   eclipse debug config里面去添加一个新的V8 VM的调试配置
   
    
    
   --END