ssh
======

2010.08.14
----------

1、升级到3.3.3

2010.08.08
----------

1、增加

      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>

   不知与
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.0.1</version>
      </dependency>
   有什么关系

2、使用spring中的Log4jConfigListener有如如下好处：

   1. 动态的改变记录级别和策略，不需要重启Web应用，如《Effective Enterprise Java》所说。
   2. 把log文件定在 /WEB-INF/logs/ 而不需要写绝对路径。
因为 系统把web目录的路径压入一个叫webapp.root的系统变量。这样写log文件路径时不用写绝对路径了.
log4j.appender.logfile.File=${webapp.root}/WEB-INF/logs/myfuse.log
   3. 可以把log4j.properties和其他properties一起放在/WEB-INF/ ，而不是Class-Path。
   4.log4jRefreshInterval为60000表示 开一条watchdog线程每60秒扫描一下配置文件的变化;
   在web.xml 添加
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>WEB-INF/log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

3、取消logback

4、mvn jetty plugin add ssl
   http://mrhaki.blogspot.com/2009/05/configure-maven-jetty-plugin-for-ssl.html

   增加keytool
   mvn  keytool:genkey
         keytool:clean

   org.ssh.app.common.web.HttpsUrlRewritingInterceptor 例子运行没成功。
   采用/init/index，没找到匹配，
   采用/init/*，index动作不会匹配到，随意采用一个不存在的动作，虽然报错，但会跳转到https

5、/ /* 的区别
   / 匹配路径
   /* 匹配所有，采用该方式后，jsp后缀的页面也会被DispatcherServlet匹配，报找不到对应控制器,所以还是采用/

   http://www.coderanch.com/t/364782/Servlets/java/there-key-difference-between-url

2010.08.07
----------

--参考年轻构架师
1、hibernate 映射

   a. 使用合成(synthetic identifiler) 或代理(surrogate) 主健
      即采用没有业务含义的字段如 protected Long id;

   b. 不要使用复合主键

   c. 强烈建议引入 version or timestamp

      解决并发控制 optimistic locking.

      但各自也有问题，version在达到数据类型最大值后，hibernate 不会自动归0，而是报异常
      timestamp 信赖于jvm 及 os的时间精度

   d. 使用中间表映射多对多关系，如用户与角色

   e. 尽是不要使用 class inheritance 映射

   f. 永远不要使用List

      ?? 要查下资料理解下

   g. EntityIntereptor

      对核算字段，如create_time, update_time ，实行自动插入值
      参考hjpetstore2中 AuditInterceptor

   h. 不要指定任何lazy=false

      如果使用了lazy = true,可在代码中显示使用eagerly fetch

       return  getSession().createCriteria(Order.class)
                .setFetchMode("shipAddress", FetchMode.JOIN)         --
                .setFetchMode("billAddress", FetchMode.JOIN)         --
                .setFetchMode("orderLineItems", FetchMode.JOIN)      --
                .setFetchMode("orderLineItems.item", FetchMode.JOIN) --
                .add(Restrictions.between("createTime", from, to))
                .addOrder(org.hibernate.criterion.Order.asc("orderStatus"))
                .list();

       String hql = "FROM Order AS o "
                 + "INNER JOIN FETCH o.shipAddress a "               --
                 + "INNER JOIN FETCH o.orderLineItems oli "          --
                 + "INNER JOIN FETCH o.paymentPartner pp "           --
                 + "LEFT JOIN FETCH oli.item i "                     --
                 + "WHERE o.createTime BETWEEN :from AND :to "
                 + "ORDER BY o.orderStatus ASC ";

   i. 显示指定外键名

   j. 二级缓存

      设置read-only,read-write 实体使用二级缓存，

      最好不使用查询缓存??

2、kaptcha

   参考 hjpetstore UserFormController.validateCaptcha

3、https

   HttpsUrlRewritingInterceptor

   使用参考hjpetstore-servlet.xml

4、soa public api key

   每个注册用户有个 api key,每次访问服务时需带上个api key，这样保证了web service的安全性

   HjpetstoreController

   --有关安全方面，还是要再看下项目代码

5、p86 spring jms

6、win2003安装ip6

运行：cd 、\
      netsh
      int ipv6
      install     耐心等待确定
这样就可以啦，如果想自己配置，就在ipv6模式下输入add address "本地地址" [ipv6地址]
--感觉现在没什么用处，翻墙现在也不是很方便

2010.08.05
----------

1、core 增加 ServiceException 异常类
   cd module/core
   mvn install

2、sshapp 改变jdk支持版本为1.6,pom.xml

      <!-- compiler插件, 设定JDK版本 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <showDeprecation>false</showDeprecation>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

3、新增hjpetstore中几个包
   common/monitor
   util/Base64Coder.java
   util/CalendarUtil.java
   util/CustomCalendarEditor.java
   util/EmailSender.java
   util/FileUtils.java
   util/MessageDigestUtil.java
   util/RSAUtil.java
   util/RestCredentialsTemplate.java
   util/SimpleTextEmailSender.java

   所加的monitor.xml 与原有jmx 配置有冲突

4、增加所需的mvn，kaptcha,zapcat
   save/my-mvn

2010.08.03
----------

1、Asynchronous method invocation in Spring 3.0
The @Async annotation
The @Async annotation allows invocation of that method to occur asynchronously.
In other words, the caller will return immediately upon invocation.

http://www.skill-guru.com/blog/2010/01/13/asynchronous-method-invocation-in-spring-3-0/

2010.08.01
----------

1、jmx、jms

   19:07 - 20:02
   20:17 - 20:35
   21:15

2010.07.28
----------

1、采用最新hibernate3.5.4

   org.springside.modules.orm.hibernate.HibernateDoa
   修改 countCriteriaResult 方法

2、cd modules/pare
   mvn clean
   mvn install
   cd modules/core
   mvn clean
   mvn eclipse:clean
   mvn eclipse:eclipse
   mvn install
   cd modules/extension
   mvn clean
   mvn eclipse:clean
   mvn eclipse:eclipse
   mvn install

   mvn application/sshapp
   mvn clean
   mvn eclipse:clean
   mvn eclipse:eclipse

3、springside - core 增加 resources 支持(spring3.04版本直接支持)

2010.07.26
----------

1、增加spring mvc-showcase 例子，只支持3.0.4.BUILD-SNAPSHOT
   http://www.dzone.com/links/r/spring_mvc_3_showcase.html

   改为 3.0.3.RELEASE
   参考 spring-samples\petcare-trunk，servlet-context.xml 中增加对 <petcare:resources />的支持

   添加以下文件(3.0.4已不需这样操作，默认支持)
   main/resources/org.springframework/util/config/spring-petcare-3.0.xsd
   META-INF/spring.handlers, pring.schemas
   main/java/org/springframework/util/config/.., resource

   还有个问题，采用mvn eclipse:eclipse 产生项目导入eclipse，报以下错误
   Java compiler level does not match the version of the installed Java project facets

2010.07.20
----------

1、尝试spring3.03, jetty 7.1.4.v20100610

2、restful风格，
   petcare-trunk,eggsy-spring3-restful-example web.xml中直接采用过滤，不用urlwriter

   这样做法，就需要在程序中写全url,如/app/student(采用了/app/*过滤)，如果采用了/*，还要考虑静态文件的url，
   petcare-trunk好象是通过 servlet-context.xml中定义
   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <petcare:resources />

3、增加tiles支持

   app-servlet.xml 中取消
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/views/" p:suffix=".jsp" p:order="10"/>

   以前所有viewname都对应一个/views/下一个jsp文件，现改为对应titles.xml中一个 definition name=?

2010.07.13
----------

1. 线程学习
   org.ssh.app.example.thread

2010.07.12
----------

1、Hibernate Recipes A Problem-Solution Approach.pdf

   a. org.ssh.app.common.entity.Contact

   b. 继承表，采用同一张表
      org.ssh.app.example.entity.Disc_1
   c. 继承表，采用不同表(后台相应产生了3张表)
      org.ssh.app.example.entity.Disc_2

   也可参考 org.ssh.app.common.entity.Post，体会下。

   p 125 many to one
   book -- many to on -- publisher
   book 类中定义
   @ManyToOne
   @Cascade(value=CascadeType.SAVE_UPDATE)
   @JoinTable(name="book_publisher", -- 后台表名
              joinColumns=@JoinColumn(name="book_id"),
              inverseJoinColumns=@JoinColumn(name="publisher_id"))

   d. p140

   mapping a set
   -- have no duplicate,

   book -- has more chapter -- chapter
   book 类中定义
   private Set chapters;
   @CollectionOfElements(targetElement=java.lang.String.class)
   @JoinTable(
      name="book_chapter",
      joinColumns=@JoinColumn(name="book_id")
   )
   @Columne(name="chapter_name")
   --后台生成的表book_chapter以book_id + chapter_name 为主键

   mapping a bag
   --have duplicates
   private Collection chapters = new ArrayList();
   ----后台生成的表book_chapter没有主键，当然也可以产生一个产生主键的策略p145

   mapping a List
   --p148
   --it's an ordered collection

   mapping an array
   --一般为解决遗留项目，大多会采用List

   mapping a Map
   -- p152

   using Interceptors
   -- p214 定义拦截

2. Fetch 策略

@Fetch(FetchMode.JOIN) 会使用left join查询  只产生一条sql语句
@Fetch(FetchMode.SELECT)   会产生N+1条sql语句
@Fetch(FetchMode.SUBSELECT)  产生两条sql语句 第二条语句使用id in (.....)查询出所有关联的数据

2010.07.09
----------

1、增加xmemcached pom.xml支持
   save/xmemcached-User_Guide_zh.htm

2010.07.08
----------

1、修改菜单显示

   14:30 - 17:18

2010.07.06
----------

1、Share Nothing Architecture spring？

2010.07.05
----------

1、License3j 及 gpg 简单使用
   save/license3j+gpg.txt

2、spring安全策略修改，同一ip，用户可进行多次登录，不同ip只能等上次用户退出或会话过期才能登录
   ch214-smart-concurrent.html
   但spring security 3中对部分类不支持，编译没通过
   org.ssh.app.security.SmartConcurrentSessionController

2010.07.02
----------

1、建立本地oracle.jar
-在含有ojdbc14.jar的目录下运行
mvn install:install-file -Dfile=ojdbc14.jar -DgroupId=com.oracle -DartifactId=oracle -Dversion=10.2.0.2.0 -Dpackaging=jar -DgeneratePom=true

2、linux下eclipse 需手工设置 M2_REPO

3、add opencsv

2010.07.01
----------

1、加入spring httpInvoke

   21:00 - 22:26

   http://snowolf.javaeye.com/blog/703732

   remote-servlet.xml,org.ssh.app.httpinvoke
   测试:  client.UserServiceTest
   暂时不考虑用户权限

2010.06.30
----------

1、security + extjs
  20:00 - 21:22

2010.06.28
----------

1、security + extjs
  21:00 - 21:45

2010.06.27
----------

1、spring security + extjs
  http://loianegroner.com/2010/02/integrating-spring-security-with-extjs-login-page/
  19:00 - 20:34

2010.06.25
----------

1、初始基础数据
   http://localhost:8089/sshapp/init/index

   完成后，通过app-servlet.xml中配置自动指到index.jsp

2010.06.24
----------

1、关注eclipse下编写wiki
   http://eclipse.dzone.com/articles/getting-started-wikitext
   可查看eclipse下相关帮助

2010.06.23
----------

1、网上教材版本与本项目不一致。

2010.06.22
----------

1、增加jalopy(格式化java文件)
   parent/pom.xml
   jalopy.xml

   use: mvn jalopy:format

2、参考oa-trunk中
  org.mortbay.jetty.maven-jetty-plugin服务器jetty
  scanIntervalSeconds热部署时间间隔10s
  webDefaultXml使用自定义的webdefault.xml，解决静态资源被锁定的问题

3、增加mvn report

   user: mvn site

   --运行还有问题

4、spring securty 登录认证，增加method="post"

2010.06.21
----------

1、http://www.family168.com/oa/springsecurity/html/ch003-custom-db.html

   14：00 - 15：36

2、增加本地文档、例子
   save/springsecurity.zip，springsecurity-sample.rar

3、21:45 - 22:28

   http://www.family168.com/opensource.html

   oa = spring + extjs + hibernate
   http://family168.googlecode.com/svn/trunk/

   代码美化工具jalopy
   save/jalopy-eclipse-0.2-1.5rc3.zip


2010.06.20
----------

1、http://www.family168.com/oa/springsecurity/html/ch001-helloworld.html

   采用spring security 3.0.2
   21:20 - 21:37

2010.06.16
----------

1、20:00 - 20:55
   21:12 - 21:21

   采用spring restful 需注意url的写法，在extjs中url的定义与jsp文件(包含js文件)路径有关。
   一般jsp文件在views中。
   如 book/book.jsp 中包含 book-grid-row-expander.js,js中url的定义采用了../books/getBooks
   访问：http://localhost:8089/sshapp/book/book.jsp

   crud例子:http://localhost:8089/sshapp/book/index.jsp

2、测试 java 最大可用内存
   在命令行下用 java -XmxXXXXM -version 命令来进行测试

2010.06.15
----------

1、手工配置spring 方法缓存
   resources/cache/applicationContext-ehcache.xml
   --需手工指定bean及方法

2、增加 ehcache.annotations
   http://code.google.com/p/ehcache-spring-annotations/
   --暂时不用

3、增加CacheUtil
   手工处理ehcache

2010.06.14
----------

1、mvn 方式,json报错找到原因
pom.xml 中对jetyy方式运行,hibearnat采用了lazy,暂时注释掉

2、加入javamelody(监控java运行)，
只引入的pom.xml中dependency,还没完成

2010.06.13
----------

1、19：28 - 20:45

   ext url 路径问题?

2010.06.11
----------

1、采用jetty嵌入式运行，没问题。

2010.06.10
-----------

1、还原json-lib,
   jackson 1.5.2

2、19：10 - 20：38
   21:09 -21:27
   application/ekapp

   起用公司eking，同样效果，不行。
　　
2010.06.09
----------

1、21:00 - 22:30

   取消json-lib（需spring2.5.6支持）, 更改jackson 版本为1.4.2，1.5.2在spring3.0.2下有问题(http://jira.springframework.org/browse/SPR-7063?page=com.atlassian.jira.plugin.system.issuetabpanels%3Achangehistory-tabpanel)

2010.06.08
-----------

1、9：30 - 11：00
   14：30 - 15：32

   找到原因了，实体下定义必须采用类属性，不能用Int
    private Long edition;
    private Long pages;

2010.06.07
----------

1、14：30 - 17：00

   json-lib 还是不行
   还是报net.sf.json.JSONException: java.lang.reflect.InvocationTargetException
   网上资料一般是表中采用了Date字段，或hibernate有lazy，才有以上报错。

   19:00 - 19:52

   开始以List<String> 做测试，json正常
   取消Book中
//    public String toString() {
//        return ToStringBuilder.reflectionToString(this);
//    }
   json正常。妈的，想骂人。

   json-lib-2.3-jdk1.5
    * jakarta commons-lang 2.4
    * jakarta commons-beanutils 1.7.0
    * jakarta commons-collections 3.2
    * jakarta commons-logging 1.1.1
    * ezmorph 1.0.6

   就是不能采用以上toString方法

   20:00 - 22:42

   好象还不行。
   json-lib + spring 是否只适用于 2.5?

   结合 http://stackoverflow.com/questions/2038642/help-with-spring-json-using-annotated-controllers 配置，采用ModelAndView,
   JsonController
   curl -i -X GET http://localhost:8080/sshapp/jsons/getBooks4


2010.06.06
----------

1、19:36 - 19:39
   20:23 - 20:27
   20:43 - 20:53
   21:12 - 22:57

   相关文件
   webapp/book/index.jsp
         /js/book

   奇怪，昨天正常的测试curl -i -X GET http://localhost:8089/sshapp/jsons/getBooks ,
   报：net.sf.json.JSONException: java.lang.reflect.InvocationTargetException
   现在不正常了，换了mysql数据库也没用。

2010.06.05
----------

1、10:00 - 12:00

   搭建 ubuntu 开发环境

2、19:00 - 21:30

   http://loianegroner.com/tag/json-lib-ext-spring/

   22:00 - 2:30

   继续关注以上这个项目，争取改写成功


2010.06.04
----------

1、20:30 - 23:06

   extjs restful spring
   http://loianegroner.com/2010/05/populating-an-extjs-datagrid-rowexpander-using-spring-mvc-3/

2010.06.03
-----------

1、20:21 - 20:43
   21:02 - 21:32

   rest

2010.06.02
-----------

1、20:30 - 22:50

   rest

2010.05.25
-----------

1、21:30 - 22:32

   rest

2010.05.25
-----------

1、20:00 - 21:44

   增加c3po连接池，hibernate-ehcache

2010.05.24
-----------

1、19:00  -- 20:25
   21:00  -- 21:13
   21:17  -- 21:46
   22:10  -- 22：44

   --3.3.2中如何使用cache，方法与以前不同了，
   --Ehcache,showcase/cache，可用于页面缓存 StaticContentServlet，
   --以前采用hibernate 配置，只能用于数据库表缓存



   --END