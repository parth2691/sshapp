#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}-parent</artifactId>
	<packaging>pom</packaging>
	<name>SpringSide's Parent pom.xml</name>
	<version>${version}</version>
	<organization>
		<name>SpringSide</name>
		<url>http://www.springside.org.cn</url>
	</organization>

	<properties>
		<!-- 主要依赖库的版本定义 -->
		<springside.version>3.1.8</springside.version>
		<spring.version>2.5.6</spring.version>
		<hibernate.version>3.3.2.GA</hibernate.version>
		<struts2.version>2.1.6</struts2.version>
		<cxf.version>2.2.3</cxf.version>
		<spring-security.version>2.0.5.RELEASE</spring-security.version>

		<!--  Plugin的属性定义  -->
		<maven-surefire-plugin.skip>false</maven-surefire-plugin.skip>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- 设定除中央仓库(repo1.maven.org/maven2/)外的其他仓库,按设定顺序进行查找. -->
	<repositories>

		<repository>
			<id>nexus</id>
			<name>local nexus server</name>
			<url>http://localhost:8081/nexus/content/groups/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>offical</id>
			<name>Maven Offical Repository</name>
			<url>http://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>jboss</id>
			<name>jboss repository</name>
			<url>http://repository.jboss.com/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>local nexus server</name>
			<url>http://localhost:8081/nexus/content/groups/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<!-- 预定义依赖项的version,scope与exclusions,子项目中只需定义groupId 和 artifactId 即可 -->
	<dependencyManagement>
		<dependencies>
			<!-- springside modules begin -->
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside3-core</artifactId>
				<version>${symbol_dollar}{springside.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springside</groupId>
				<artifactId>springside3-jee</artifactId>
				<version>${symbol_dollar}{springside.version}</version>
			</dependency>
			<!-- springside modules end -->

			<!-- spring begin -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
			</dependency>

			<!-- spring aop -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.6.5</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.2</version>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>jsr250-api</artifactId>
				<version>1.0</version>
			</dependency>
			<!-- spring end -->

			<!-- orm begin -->
			<!-- hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${symbol_dollar}{hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-annotations</artifactId>
				<version>3.4.0.GA</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${symbol_dollar}{hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-jmx</artifactId>
				<version>${symbol_dollar}{hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.8.0.GA</version>
			</dependency>

			<!-- spring orm -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
			</dependency>

			<!-- optional  datasource-->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.2.2</version>
			</dependency>
			<!-- orm end -->

			<!-- web begin -->
			<!-- struts2 -->
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-core</artifactId>
				<version>${symbol_dollar}{struts2.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-spring-plugin</artifactId>
				<version>${symbol_dollar}{struts2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-convention-plugin</artifactId>
				<version>${symbol_dollar}{struts2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>2.3.15</version>
			</dependency>

			<!-- spring web -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
			</dependency>

			<!-- json -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>2.3</version>
				<classifier>jdk15</classifier>
			</dependency>

			<!-- j2ee web spec -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>1.1.2</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.1.2</version>
			</dependency>

			<!-- url rewrite -->
			<dependency>
				<groupId>org.tuckey</groupId>
				<artifactId>urlrewritefilter</artifactId>
				<version>3.1.0</version>
			</dependency>
			<!-- web end -->

			<!-- webservice begin -->
			<!-- cxf -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-core</artifactId>
				<version>${symbol_dollar}{cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${symbol_dollar}{cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-annotation_1.0_spec</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-javamail_1.4_spec</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.geronimo.specs</groupId>
						<artifactId>geronimo-activation_1.1_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${symbol_dollar}{cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-ws-security</artifactId>
				<version>${symbol_dollar}{cxf.version}</version>
			</dependency>
			<!-- webservice end -->

			<!-- security begin -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core-tiger</artifactId>
				<version>${symbol_dollar}{spring-security.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-support</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-aop</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${symbol_dollar}{spring-security.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-web</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-jdbc</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.octo.captcha</groupId>
				<artifactId>jcaptcha-api</artifactId>
				<version>1.0</version>
			</dependency>

			<dependency>
				<groupId>com.octo.captcha</groupId>
				<artifactId>jcaptcha</artifactId>
				<version>1.0</version>
			</dependency>
			<!-- security end -->

			<!-- quartz -->
			<dependency>
				<groupId>org.opensymphony.quartz</groupId>
				<artifactId>quartz</artifactId>
				<version>1.6.5</version>
			</dependency>

			<!-- logging begin-->
			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.5.8</version>
			</dependency>

			<!-- slf4j-log4j绑定 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.5.8</version>
			</dependency>

			<!-- 替代java.util.logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>1.5.8</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>1.5.8</version>
			</dependency>

			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.15</version>
				<exclusions>
					<exclusion>
						<groupId>javax.mail</groupId>
						<artifactId>mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
					<exclusion>
						<groupId>oro</groupId>
						<artifactId>oro</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- logging end-->

			<!-- email begin -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.1</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>1.1</version>
			</dependency>
			<!-- email end -->

			<!-- utils begin -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.0</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>

			<!-- cache (usually for orm) -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>1.6.2</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-jgroupsreplication</artifactId>
				<version>1.3</version>
			</dependency>

			<!-- object copy (usually for webservice) -->
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>5.1</version>
			</dependency>
			<!-- utils end -->

			<!-- xml binding begin -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.3.1</version>
			</dependency>

			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>2.1.12</version>
			</dependency>
			<!-- xml binding end -->

			<!-- profile tools begin -->
			<dependency>
				<groupId>p6spy</groupId>
				<artifactId>p6spy</artifactId>
				<version>1.3</version>
			</dependency>

			<dependency>
				<groupId>org.perf4j</groupId>
				<artifactId>perf4j</artifactId>
				<version>0.9.12</version>
			</dependency>
			<dependency>
				<groupId>commons-jexl</groupId>
				<artifactId>commons-jexl</artifactId>
				<version>1.1</version>
			</dependency>
			<!-- profile tools end -->

			<!-- test begin -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.4</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>2.5.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymockclassextension</artifactId>
				<version>2.4</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${symbol_dollar}{spring.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.seleniumhq.selenium.client-drivers</groupId>
				<artifactId>selenium-java-client-driver</artifactId>
				<version>1.0.1</version>
				<exclusions>
					<exclusion>
						<groupId>org.codehaus.groovy.maven.runtime</groupId>
						<artifactId>gmaven-runtime-default</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.seleniumhq.selenium.server</groupId>
						<artifactId>selenium-server</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.seleniumhq.selenium.core</groupId>
						<artifactId>selenium-core</artifactId>
					</exclusion>
				</exclusions>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.unitils</groupId>
				<artifactId>unitils</artifactId>
				<version>2.4</version>
				<scope>test</scope>
			</dependency>
			<!-- test end -->

			<!-- hibernate tools -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-tools</artifactId>
				<version>3.2.4.GA</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 插件配置 -->
	<build>
		<!-- 命令行输入mvn时，默认执行mvn package  -->
		<defaultGoal>package</defaultGoal>

		<!-- 设定Web应用中编译结果输出到WEB-INF/classes 中, 与使用IDE时相同  -->
		<outputDirectory>webapp/WEB-INF/classes</outputDirectory>

		<pluginManagement>
			<plugins>
				<!-- war插件, 设定webapp目录为/webapp -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1-beta-1</version>
					<configuration>
						<warSourceDirectory>webapp</warSourceDirectory>
					</configuration>
				</plugin>

				<!-- compiler插件, 设定JDK版本与编码 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.0.2</version>
					<configuration>
						<source>1.5</source>
						<target>1.5</target>
						<encoding>${symbol_dollar}{project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<!-- surefire插件, 设定单元测试时只执行unit目录下的用例.-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.4.3</version>
					<configuration>
						<argLine>-Xmx512M</argLine>
						<includes>
							<include>**/unit/**/*Test.java</include>
						</includes>
						<skip>${symbol_dollar}{maven-surefire-plugin.skip}</skip>
					</configuration>
				</plugin>

				<!-- resource插件, 设定编码 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<encoding>${symbol_dollar}{project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<!-- dependency插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.1</version>
				</plugin>

				<!-- archetype插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>2.0-alpha-4</version>
				</plugin>

				<!-- jetty插件 -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.19</version>
				</plugin>

				<!-- cargo插件 -->
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>1.0</version>
				</plugin>

				<!-- selenium插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>selenium-maven-plugin</artifactId>
					<version>1.0</version>
				</plugin>

				<!-- dbunit插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>dbunit-maven-plugin</artifactId>
					<version>1.0-beta-3</version>
					<configuration>
						<driver>${symbol_dollar}{jdbc.driver}</driver>
						<url>${symbol_dollar}{jdbc.url}</url>
						<username>${symbol_dollar}{jdbc.user}</username>
						<password>${symbol_dollar}{jdbc.password}</password>
						<schema>${symbol_dollar}{jdbc.schema}</schema>
						<type>CLEAN_INSERT</type>
						<src>src/test/resources/test-data.xml</src>
						<dest>src/test/resources/test-data.xml</dest>
						<format>xml</format>
						<transaction>true</transaction>
						<encoding>${symbol_dollar}{project.build.sourceEncoding}</encoding>
						<dataTypeFactoryName>${symbol_dollar}{dbunit.datatype}</dataTypeFactoryName>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>${symbol_dollar}{jdbc.driver.groupid}</groupId>
							<artifactId>${symbol_dollar}{jdbc.driver.artifactId}</artifactId>
							<version>${symbol_dollar}{jdbc.driver.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- sql插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.3</version>
					<configuration>
						<driver>${symbol_dollar}{jdbc.driver}</driver>
						<url>${symbol_dollar}{jdbc.url}</url>
						<username>${symbol_dollar}{jdbc.user}</username>
						<password>${symbol_dollar}{jdbc.password}</password>
						<onError>continue</onError>
						<encoding>${symbol_dollar}{project.build.sourceEncoding}</encoding>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>${symbol_dollar}{jdbc.driver.groupid}</groupId>
							<artifactId>${symbol_dollar}{jdbc.driver.artifactId}</artifactId>
							<version>${symbol_dollar}{jdbc.driver.version}</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- 不执行任何测试的profile -->
		<profile>
			<id>notest</id>
			<properties>
				<maven-surefire-plugin.skip>true</maven-surefire-plugin.skip>
			</properties>
		</profile>

		<!-- 在test阶段执行集成测试的profile -->
		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<!-- dbunit插件初始化测试数据 -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>init-integration-data</id>
								<phase>test-compile</phase>
								<goals>
									<goal>operation</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- junit插件执行integration目录的用例 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>test</phase>
								<configuration>
									<includes>
										<include>**/integration/**/*Test.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 执行功能测试的profile -->
		<profile>
			<id>functional</id>
			<build>
				<plugins>
					<!-- dbunit插件初始化测试数据 -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>init-functional-data</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>operation</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- selenium插件启动与关闭selenium服务器 -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>selenium-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-selenium</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start-server</goal>
								</goals>
								<configuration>
									<background>true</background>
								</configuration>
							</execution>
							<execution>
								<id>stop-selenium</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop-server</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- jetty插件启动与关闭应用 -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy-war</goal>
								</goals>
								<configuration>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- surefire插件执行functional目录的用例 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>functional-test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<includes>
										<include>**/functional/**/*Test.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--初始化数据库Schema及测试数据的profile-->
		<profile>
			<id>initdb</id>
			<build>
				<plugins>
					<!-- sql 插件创建Schema -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>

						<executions>
							<execution>
								<id>create database</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<srcFiles>
										<srcFile>${symbol_dollar}{dbunit.schema.file}</srcFile>
										<!-- <srcFile>src/main/sql/derby/init-data.sql</srcFile> -->
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- dbunit 插件初始化数据-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>init data</id>
								<phase>initialize</phase>
								<goals>
									<goal>operation</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
